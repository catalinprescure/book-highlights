[
    {
        "name": "Coders at work",
        "children": [
            {
                "name": "Brad Fitzpatrick",
                "children": [
                    {
                        "name": "Maintainer for life",
                        "text": "<i>I've also done a lot of testing since LiveJournal.\nOnce I started working with other people\nespecially. And once I realized that code I write\nnever fucking goes away and I'm going to be a\nmaintainer for life.</i> I get comments about blog\nposts that are almost 10 years old. \u201cHey. I found\nthis code. I found a bug,\u201d and I'm suddenly\nmaintaining code.",
                        "id": 1
                    },
                    {
                        "name": "Tests to guard",
                        "text": "to tell them that they messed up. <i>I had to force\na lot of people to write tests, mostly people who\nwere working for me. I would write tests to guard\nagainst my own code breaking, and then once they\nwrote code. I was like, \u201cAre you even sure that\nworks? Write a test. Prove it to me.\u201d</i> At a certain\npoint, people realize, \u201cHoly crap, it does pay off,\u201d\nespecially maintenance costs later.",
                        "id": 2
                    },
                    {
                        "name": "About memcached",
                        "text": "memcached until like right after college, right\nwhen I moved out. <i>I remember coming up with\nthe idea. I was in my shower one day. The site\nwas melting down and I was showering and then\nI realized we had all this free memory all over the\nplace.</i> I whipped up a prototype that night, wrote\nthe server in Perl and the client in Perl.",
                        "id": 3
                    },
                    {
                        "name": "Win a race",
                        "text": "mediocrity required not to get fired. It\u2019s about\nbeing awesome. It\u2019s about winning. <i>You don\u2019t win a\nrace by trying not to lose. And you don\u2019t win at life\nby trying not to suck</i>. Fortunately, the content of\nthe book has never been about trying not to suck</i>. I\ncan\u2019t think that way, and neither should you.",
                        "id": 4
                    },
                    {
                        "name": "Write something complex",
                        "text": "Fitzpatrick: Oh, yeah. I definitely try to find an\nexcuse to use anything, to learn it. <i>Because you\nnever learn something until you have to write\nsomething in it, until you have to live and breathe\nit.</i> It's one thing to go learn a language for fun, but\nuntil you write some big, complex system in it, you\ndon't really learn it.",
                        "id": 5
                    },
                    {
                        "name": "Formal education",
                        "text": "terminology. Prior to that. I knew programming\npretty well but I didn't have the vocabulary to\ndescribe what it was I was doing. <i>Or I would make\nup my own terminology for it and people would\nthink I didn't know what I was talking about.\nFormal C.S. education helped me be able to talk\nabout it.</i>",
                        "id": 6
                    },
                    {
                        "name": "Hard parts first",
                        "text": "Fitzpatrick: Sometimes. But I've started with the\nhard bits or the parts I was unsure of, and tried\nto implement those parts first. <i>I try not to put\noff anything hard or surprising to the end; I enjoy\ndoing the hard things first.</i> The projects that I\nnever finish\u2014my friends give me shit that it's a\nwhole bunch\u2014it's because I did the hard part.",
                        "id": 7
                    },
                    {
                        "name": "Reading code",
                        "text": "Then I really enjoyed reading code, because\nwhenever I didn't understand some pattern. I was\nlike, <i>\u201cWait, why the fuck did they do it like this?\u201d\nand I would look around more, and I'd be like,\n\u201cWow, that is a really clever way to do this. I see\nhow that pays off.\u201d</i> I would've done that earlier but\nI was afraid to do it because I was thinking that if it\n\u2018wasn't my code. I wouldn't understand it.",
                        "id": 8
                    },
                    {
                        "name": "Strict style guide",
                        "text": "Having worked at Google with really strict style\nguidelines in all languages. <i>On our top six or seven\nlanguages, there's a really strict style guide that\nsays</i>, \u201cThis is how we lay out our code. This is how\nwe name variables. This is how we do spacing and\nindentation, and these patterns and conventions\nyou use, and this is how you declare a static field.\u201d",
                        "id": 9
                    },
                    {
                        "name": "Fear driven advice",
                        "text": "Your parents would rather you be OK than have a\nremarkable career at the cost of great personal risk.\n<i>More than any other third party you might look\nto, your parents are going to give you fear-driven\nadvice. Fear-driven advice is geared toward not\nlosing.</i> Thinking about not losing is not the way to\nwin! Winners take risks.",
                        "id": 10
                    },
                    {
                        "name": "Google deadlines",
                        "text": "\u201cYay! A deadline!\u201d and I get so excited that\nthe adrenaline kicks in, and I work, and I finish\nthe damn thing. <i>Nothing with Google is really a\ndeadline. With Google it's like, \u201cWhat do you think\nabout launching this? How does that feel?\u201d</i> It's rare\nthat there's some real deadline.",
                        "id": 11
                    },
                    {
                        "name": "People complacency",
                        "text": "all be self-driven like me. <i>That was a learning\nexperience in HR, that some people just do what\nthey're told and don't really have a passion\nfor excellence</i>. They're just like, \u201cDone. Next\nassignment,\u201d Or they don't tell you and just browse\nthe Web. So I had a couple of painful experiences.\nBut I think, after a year or two of that, I learned that\npeople are different.",
                        "id": 12
                    },
                    {
                        "name": "Purist programmers",
                        "text": "Some are purists. They would just do abstraction\non abstraction on abstractions. They would go\nreally slowly and are very religious about their\nstyle. <i>They're like, \u201cI'm an artisan programmer.\u201d\nAnd I was like, \u201cYour code doesn't run. It's not\nefficient and it doesn't look like any of the other\ncode that you're interacting with.\u201d</i>",
                        "id": 13
                    },
                    {
                        "name": "People motivations",
                        "text": "Other people I eventually figured out what\nmotivated them. One guy was really good at\ntinkering and getting a prototype working. He\nwrote sysadmin Perl. <i>He could wire stuff together,\nwrite shell scripts, and write really bad Perl and\nreally bad C, but kind of get it working.</i> Then we\nwould be like, \u201cHoly crap, you researched all this\nstuff, you got all these components talking to each\nother?\u201d",
                        "id": 14
                    },
                    {
                        "name": "Side projects",
                        "text": "Fitzpatrick: I often look for people that have done,\nlike, a lot of stuff on their own that wasn't asked\nof them. <i>Not just their school project or just what\ntheir previous employer had them do. Somebody\nwho was passionate about something and had\nsome side project.</i> How did they maintain it and\nhow serious did they get with it? Or do they do a lot\nof quick hacks and abandon them?",
                        "id": 15
                    },
                    {
                        "name": "Real understanding",
                        "text": "someone could teach you something and you're\nlike, <i>\u201cYeah, yeah, sure. I understand.\u201d You delude\nyourself but once you actually have to get down\nand do it at a real level and understand all the\ncorner cases, it forces you to actually learn the\nthing.</i> But I don't know if that would work for\neveryone.",
                        "id": 16
                    },
                    {
                        "name": "Smaller parts",
                        "text": "But a lot of times lately, if there's something weird\ngoing on. I'm like, <i>\u201cOK, that function is too big;\nlet's break that up into smaller parts and unit-test\neach one of them separately to figure out where my\nassumptions are wrong</i>, rather than just sticking\nin random printIns.\u201d",
                        "id": 17
                    },
                    {
                        "name": "About optimization",
                        "text": "Fitzpatrick: <i>Optimization is fun because it's not\nnecessary. If you're doing that, you've got your\nthing working and nothing else is more important</i>\nand you're either saving money or doing it\nbecause it's like a Perl golf contest ...",
                        "id": 18
                    },
                    {
                        "name": "Logic and statistics",
                        "text": "<i>You don't need that much math. For most programmers, \nday to day, statistics is a lot more important.</i> \nIf you're doing graphics stuff,\nmath is a lot more important but most people\ndoing Java enterprise stuff or web stuff, it's not.\nLogic helps and statistics comes up a lot.",
                        "id": 19
                    },
                    {
                        "name": "Social kid",
                        "text": "a general life thing, right? <i>There was some study\nabout who was successful after high school. Was it\nthe smart kids or the social kids?</i> It turned out that\nit was the social kids who ended up making all the\nmoney in life, not the people with the good grades.\nI thought that was interesting.",
                        "id": 20
                    },
                    {
                        "name": "Bridge engineer",
                        "text": "I have a friend who's a structural engineer\nand he went to school forever and took all\nthis engineering certification stuff. <i>It's kind of\ncomforting to know that the people who build the\nbridges I'm on studied this shit forever</i> and took\ntons of tests and stayed up all the time studying.",
                        "id": 21
                    },
                    {
                        "name": "Competing",
                        "text": "stop and work on fun things on my own. <i>I don't\nfeel like I'm competing with anyone right now\nand I don't really care if other people are better\nbecause I feel like there are tons of people who are\nbetter already.</i> I figure we are always in the middle\nanyway, so I'm happy to stay in the middle.",
                        "id": 22
                    }
                ]
            },
            {
                "name": "Douglas Crockford",
                "children": [
                    {
                        "name": "Language changes",
                        "text": "have the potential costs of disruption which, as\nyou become bigger, become unacceptable. <i>When\nyou're really successful, you need to be extremely\ncautious in any changes that you make.</i> Whereas\nif you haven't made it yet, you have a lot more\nfreedom in changing it around.",
                        "id": 23
                    },
                    {
                        "name": "Ajax accident",
                        "text": "got frozen in 1999 and then should have gone\ninto neglect and died. <i>But instead, by accident,\nAjax happened and suddenly it's the world's most\nimportant programming language.</i>",
                        "id": 24
                    },
                    {
                        "name": "Js worst feature",
                        "text": "<i>The worst feature of JavaScript, without question,\nis its dependence on a global object.</i> It doesn't have\nlinkers, it doesn't have any kind of information\nhiding between compilation units. It all gets\ndumped together into a common global object.",
                        "id": 25
                    },
                    {
                        "name": "GWT js ignorant",
                        "text": "Because <i>I worry about the abstraction leakage. If\nthere's a problem in your Java code or in GWT or\nin what it produces on the other side, you may or\nmay not have a place to stand to deal with that.</i>\nParticularly if you took the approach that you can\nafford to be completely ignorant about JavaScript\nbecause the language is hidden from you.",
                        "id": 26
                    },
                    {
                        "name": "Js smaller",
                        "text": "Crockford: I think the best way to make JavaScript\nbetter would be to make it smaller. <i>If we could\njust get it down to what it does really well and\nremove the features that add little or no value,\nit's actually a better language.</i> And I think we can.",
                        "id": 27
                    },
                    {
                        "name": "Ajax libraries",
                        "text": "Where we do have a problem is that <i>there are too\nmany Ajax libraries. That was a consequence of the\nfact that JavaScript is so powerful and the need\nis so profound and that they're easy to make.</i> So\nfor a while everybody was making them.",
                        "id": 28
                    },
                    {
                        "name": "Jquery selector",
                        "text": "One thing that we're seeing now is that the Ajax\nlibraries are converging. <i>jQuery came up with\na notation for using CSS selectors for getting a\nlist of objects from the DOM and then providing\nmethods for manipulating the objects en masse.</i>\nAnd that turns out to be a really good idea and\nit's something that JavaScript does very effectively.",
                        "id": 29
                    },
                    {
                        "name": "Code reading",
                        "text": "Crockford: One of the things I've been pushing is\ncode reading. <i>I think that is the most useful thing\nthat a community of programmers can do for\neach other\u2014spend time on a regular basis reading\neach other's code.</i>",
                        "id": 30
                    },
                    {
                        "name": "Code reading schedule",
                        "text": "the end. Back in the old days, we would schedule\na code reading just as we were finishing a project\nand usually it would be canceled because we were\nlate. <i>I now believe that code reading should be\nhappening all the time throughout the life of the\nproject.</i>",
                        "id": 31
                    },
                    {
                        "name": "Almost done",
                        "text": "I've managed projects where we're up against a\ndeadline and we had people saying, <i>\u201cYeah. I'm\nalmost done,\u201d and then you get the code, and\nthere's nothing there, or it's crap, or whatever, and\nthey're nowhere close to done.</i> In management,\nthose are the experiences you hate the most and I\nthink code reading is the best way of not getting\ntrapped like that.",
                        "id": 32
                    },
                    {
                        "name": "Plus plus",
                        "text": "through be the default was wrong\u2014<i>they shouldn't\nhave done that. ++ has huge security problems\u2014it\nencourages you to be way too tricky, to try to do too\nmuch in one line.</i> In that compulsion to do it in one\nline, you make code which is hard to understand\nand which is likely to lead to things like buffer\noverrun errors.",
                        "id": 33
                    },
                    {
                        "name": "Continue",
                        "text": "It makes certain kinds of complicated structures\neasier to write. <i>But I found that I can always\nimprove the structure if I can find a way to factor\nit out. So as part of my personal discipline. I don't\nuse continue ever.</i>",
                        "id": 34
                    },
                    {
                        "name": "Good code",
                        "text": "it's really difficult to write good code in a sloppy\nmanner. <i>By good code. I mean it's going to be\nreadable. At one level, it doesn't matter what it\ndoes to a machine if I can't figure out what it does</i>,\nso it might turn out that the code is amazing in\nterms of its efficiency, or its compactness, or some\nother metric which I don't care about.",
                        "id": 35
                    },
                    {
                        "name": "Second system",
                        "text": "The fallacy is that it's going to take that amount\nof time again, though there are counterexamples.\n<i>You've got the second-system problem where\npeople who've had some success are given a blank\nslate and allowed to do whatever they want.</i>\nGenerally, they will fail because they'll be too\nambitious, they won't understand the limits.",
                        "id": 36
                    },
                    {
                        "name": "Compatibility problems",
                        "text": "Those sort of specification errors are really, really\nhard. And we have them in the Ajax world. <i>Most\nof our problems in the Ajax world are due to the\ndifferences at the browser level. Doing the cross-\nbrowser stuff is much harder than it should be</i>\nbecause the Web is not specified well and because\nthe implementations are so variable.",
                        "id": 37
                    },
                    {
                        "name": "All in your head",
                        "text": "that I couldn't program anymore because I just\ncouldn't keep enough stuff in my head. <i>A lot\nof programming is you keep stuff in your head\nuntil you can get it written down and structured\nproperly.</i> And I just couldn't do it.",
                        "id": 38
                    },
                    {
                        "name": "Js refactoring",
                        "text": "<i>That's one of the things that I discovered I really\nlike about JavaScript. Refactoring in JavaScript, I \nfind, is really easy.</i> Whereas refactoring a deep\nclass hierarchy can be really, really painful.",
                        "id": 39
                    },
                    {
                        "name": "Soft objects",
                        "text": "Crockford: I've become a really big fan of soft\nobjects. <i>In JavaScript, any object is whatever you\nsay it is. That's alarming to people who come at\nit from a classical perspective</i> because without a\nclass, then what have you got? It turns out you\njust have what you need, and that's really useful.",
                        "id": 40
                    },
                    {
                        "name": "Discipline",
                        "text": "good to be scared because it is scary and it is\nreal. It requires discipline</i>. <i>In most of the classical\nlanguages, the language is the thing imposing the\ndiscipline. In JavaScript you have to bring your\nown discipline</i>.",
                        "id": 41
                    },
                    {
                        "name": "Js as java",
                        "text": "<i>I understand why people are frustrated with the\nlanguage. If you try to write in JavaScript as\nthough it is Java, it'll keep biting you. I did this.</i>\nOne of the first things I did in the language was\nto figure out how to simulate something that\nlooked sort of like a Java class, but at the edges it\ndidn't work anything like it.",
                        "id": 42
                    },
                    {
                        "name": "Js tools",
                        "text": "There is much less need of formal tools like you\nhave in other languages. <i>The browser just wants a\nsource file, and so you send it a source file, and the\ncompiler is built into the browser, so there's really\nnothing to do</i>. You don't have a linker. You don't\nhave a compiler. You don't have any of that stuff. It\njust all runs on the browser.",
                        "id": 43
                    },
                    {
                        "name": "Browser one thread",
                        "text": "<i>One of the things I like about the browser model is\nthat we only get one thread. Some people complain\nabout that\u2014if you lock up that thread, then the\nbrowser's locked up</i>. So you just don't do that.\nThere are constantly calls for putting threads into\nJavaScript and so far we've resisted that. I'm really\nglad we have.",
                        "id": 44
                    },
                    {
                        "name": "Json",
                        "text": "when XML was proposed as a data-interchange\nformat, my first impression of that was, \u201c<i>My god,\nthis is way, way, way too complicated. We don't\nneed all of this stuff just to move data back and\nforth</i>.\u201d And so I proposed another way to do it,\nand it won.",
                        "id": 45
                    },
                    {
                        "name": "Hiring",
                        "text": "Crockford: I'm looking for quality of presentation.\n<i>I want to see what he thinks is something he's\nproud of. I want to see evidence that in fact he is\nthe author of the thing that he's defending.</i> I find\nthat is much more effective than asking them to\nsolve puzzles or trivia questions. I see all that kind\nof stuff as useless.",
                        "id": 46
                    },
                    {
                        "name": "Generalists",
                        "text": "not much else you can do. I tend not to look\nfor that kind of overspecialization unless I have a\nreally specific niche. <i>Generally, I prefer generalists.\nI want someone who's capable of learning any of\nthose APIs but isn't necessarily skilled</i> in any one.",
                        "id": 47
                    }
                ]
            },
            {
                "name": "Jamie Zawinski",
                "children": [
                    {
                        "name": "Cross platform releases",
                        "text": "welll port it later.\u201d Which is what many other\nfailed companies have done. <i>If you're trying to\nship a cross-platform product, history really shows\nthat's how you don't do it. If you want it to\nreally be cross-platform, you have to do them\nsimultaneously.</i> The porting thing results in a\ncrappy product on the second platform.",
                        "id": 48
                    },
                    {
                        "name": "Multithreading in java",
                        "text": "where it was writing some big file. <i>We took really\ngood advantage of multithreading in Java, which\nwas less painful than I had expected it to be. It was\njust really pleasant to work on.</i> From the API we\nhad designed we saw all these directions it could\ngrow.",
                        "id": 49
                    },
                    {
                        "name": "Academic approach",
                        "text": "only display plain text. They were being extremely\nacademic about their project. They were trying to\napproach it from the DOM/DTD side of things. <i>\u201cOh,\nwell, what we need to do is add another abstraction\nlayer here and have a delegate for this delegate for\nthis delegate.</i> And eventually a character will show\nup on the screen.\u201d",
                        "id": 50
                    },
                    {
                        "name": "Ship the product",
                        "text": "Zawinski: Yeah. At the end of the day, ship the\nfucking thing! It's great to rewrite your code and\nmake it cleaner and by the third time it'll actually\nbe pretty. <i>But that's not the point \u2014 you're not here\nto write code; you're here to ship products.<i>",
                        "id": 51
                    },
                    {
                        "name": "Competitor crap code",
                        "text": "<i>Your competitor's six-month 1.0 has crap code and\nthey're going to have to rewrite it in two years but,\nguess what:</i> they can rewrite it because you don't\nhave ajob anymore.",
                        "id": 52
                    },
                    {
                        "name": "Inherit code rewrite",
                        "text": "you have to cut your losses. And this always feels\nwrong to me, <i>but when you inherit code from\nsomeone else, sometimes it's faster to write your\nown than to reuse theirs.</i> Because it's going to take\nacertain amount of time to understand their code\nand learn how to use it.",
                        "id": 53
                    },
                    {
                        "name": "One file version",
                        "text": "<i>When I'm just writing the first version of the\nprogram. I tend to put everything in one file.\nAnd then I start seeing structure in that file.</i>\nLike there's this block of things that are pretty\nsimilar. That's a thousand lines now, so why don't\nI move that into another file. And the API sort of\nbuilds up organically that way.",
                        "id": 54
                    },
                    {
                        "name": "Quick use",
                        "text": "I think one of the most important things, for\nme anyway, <i>when building something from the\nground up like that is, as quickly as possible,\ngetting the program to a state that you, the\nprogrammer, can use it. Even a little bit.</i> Because\nthat tells you where to go next in a really visceral\nway.",
                        "id": 55
                    },
                    {
                        "name": "Error messages",
                        "text": "<i>A lot of programmers have the instinct of, \u201cYou've\ngot to present the error message!\u201d No you don't.\nNo one cares about that.</i> That sort of stuff is\na lot easier to manage in languages like Java\nthat actually have an exception system. Where,\nat the top loop of your idle state, you just catch\neverything and you're done.",
                        "id": 56
                    },
                    {
                        "name": "More comments",
                        "text": "<i>I always wish people would comment more,\nthough the thing that makes me cringe is when the\ncomment is the name of the function rephrased.</i>\nFunction's called push_stack and the comment\nsays, \u201cThis pushes to the stack.\u201d Thank you.",
                        "id": 57
                    },
                    {
                        "name": "Ability to argue",
                        "text": "<i>Certainly with the folks I've worked with,\nability to argue their point was important because\nwe all ended up being a pretty argumentative\nbunch</i>. With that environment, that helped a lot.\nThat certainly doesn't have anything to do with\nprogramming ability.",
                        "id": 58
                    },
                    {
                        "name": "Ignorance fear",
                        "text": "Asking questions. I think one thing that's really\nimportant is to not be afraid of your ignorance. <i>If\nyou don't understand how something works, ask\nsomeone who does. A lot of people are skittish\nabout that. And that doesn't help anybody.</i> Not\nknowing something doesn't mean you're dumb\u2014it\njust means you don't know it yet.",
                        "id": 59
                    },
                    {
                        "name": "Design patterns book",
                        "text": "Then there was <i>another book that everybody\nthought was the greatest thing ever in that same\nperiod\u2014Design Patterns\u2014which I just thought was\ncrap.</i> It was just like, programming via cut and\npaste. Rather than thinking through your task\nyou looked through the recipe book and found\nsomething that maybe, kinda, sorta felt like it, and\nthen just aped it. That's not programming.",
                        "id": 60
                    },
                    {
                        "name": "Books terminology",
                        "text": "Then in meetings they'd be tossing around\nall this terminology they got out of that book.\n<i>Like, the inverse, reverse, double-back-flip pattern\n\u2014whatever. Oh, you mean a loop? OK.</i>",
                        "id": 61
                    },
                    {
                        "name": "Under the hood",
                        "text": "Zawinski: Well, curiosity\u2014taking things apart.\n<i>Wanting to know what's going on under the hood.\nI think that's really the basis of it. Without that I\ndon't think you get very far. That's your primary\nway of acquiring knowledge.</i> Taking something\napart and looking at it is how you learn to build\nyour own. At least for me. I've read very few books",
                        "id": 62
                    }
                ]
            }
        ]
    },
    {
        "name": "Passionate Programmer",
        "children": [
            {
                "name": "Chad Fowler",
                "children": [
                    {
                        "name": "Low expectations",
                        "text": "<i>Most of us are content to go with the\nflow. Our expectations have been lowered for us\nby the media and by our friends, acquaintances,\nand family members</i>. So, leading a remarkable life\nis something you have to discover as even being a\nreasonable goal. It\u2019s not obvious.",
                        "id": 63
                    },
                    {
                        "name": "Loving your work",
                        "text": "<i>If your life is primarily consumed by your work,\nthen loving your work is one of the most\nimportant keys to loving your life.</i> Challenging,\nmotivating, rewarding work is more likely to make\nyou want to get up in the morning than dull,\naverage tasks. Doing your job well means that the\nactivity you do for 50 percent of your available\ntime is something you're good at.",
                        "id": 64
                    },
                    {
                        "name": "Higher salary",
                        "text": "take to achieve that goal. A higher salary might\nactually be desirable and lead toward happiness.</i>\n<i>But if you take your eyes off the primary goal,\nyou can find yourself driving toward a higher\nsalary at the expense of your happiness.</i> It sounds\nridiculous, but I\u2019ve done it. And so have you. Think\nabout it.",
                        "id": 65
                    },
                    {
                        "name": "Business purpose",
                        "text": "<i>As software developers, we are businesspeople. \nOur companies don\u2019t employ us because they love us.</i>\nThey never have, and they never will. That\u2019s not the\njob of a business. Businesses don\u2019t exist so we can \nhave a place to go every day.",
                        "id": 66
                    },
                    {
                        "name": "Old systems",
                        "text": "systems are replaced in stages. <i>In those stages,\nthe old systems have to talk to the new systems.\nSomeone has to know how to make the new speak\nto the old, and vice versa.</i> Typically, the young\ntykes don\u2019t know (or want to know) how to make\nthe old systems listen.",
                        "id": 67
                    },
                    {
                        "name": "Business language",
                        "text": "<i>You might be \u201cjust a programmer,\u201d but being able\nto speak to your business clients in the language\nof their business domain is a critical skill.</i> Imagine\nhow much easier life would be if everyone you\nhad to work with really understood how software\ndevelopment works.",
                        "id": 68
                    },
                    {
                        "name": "Candidate pool",
                        "text": "<i>The addition of Smalltalk to the requirements list\nyielded a candidate pool that was tiny in contrast\nto our previous list. These people were diamonds\nin the rough.</i> They really understood object-oriented \nprogramming.",
                        "id": 69
                    },
                    {
                        "name": "Take opportunity",
                        "text": "It drives me crazy to ask people whether\nthey've seen or used certain not-quite-mainstream\ntechnologies only to hear, <i>\u201cI haven't been given the\nopportunity to work on that\u201d in return. Given the\nopportunity? Neither was I! I took the opportunity\nto learn.</i>",
                        "id": 70
                    },
                    {
                        "name": "Unix guy",
                        "text": "<i>Another artificial (and inexcusable) line gets\ndrawn around platforms or operating systems.</i>\nBeing a UNIX Guy who refuses to do Windows\nis increasingly more impractical.",
                        "id": 71
                    },
                    {
                        "name": "Developer environment",
                        "text": "deploy their applications. <i>It\u2019s rare, and refreshing,\nto find a developer who truly understands\nthe platform on which he or she is working.</i>\nApplications are better and work gets done faster\nas aresult.",
                        "id": 72
                    },
                    {
                        "name": "Rate himself",
                        "text": "I was looking for really good Java programmers. To\nstart the interview. I asked this person (and all the\nothers I had interviewed that week) to rate himself\nona scale of one to ten. He said nine. I\u2019m expecting\na star here. <i>If this guy rates himself so high, why\ncan\u2019t he think of a single abusive programming\ntrick that would cause a JVM to crash?</i>",
                        "id": 73
                    },
                    {
                        "name": "Specializing in something",
                        "text": "<i>Too many of us seem to believe that specializing\nin something simply means you don\u2019t know about\nother things.</i> I could, for example, call my mother\na Windows specialist, because she has never used.\nLinux or OS X.",
                        "id": 74
                    },
                    {
                        "name": "Career road map",
                        "text": "But a living application is never done unless it\u2019s\non the road to retirement. <i>The same is true of you\nand your career. Unless you're looking to exit the\nindustry, you need a road map.</i> If Microsoft had\nconsidered Windows 3.1 done, we'd all be using\nMacintoshes right now.",
                        "id": 75
                    },
                    {
                        "name": "Impostor syndrome",
                        "text": "<i>When I showed up on the job. I was paranoid\nI would be discovered as the charlatan I really\nwas. What is this saxophone player doing here with\nus trained professionals?</i> After all. I was working\nwith people who had advanced computer science\ndegrees. And, here I was with only part of a music\ndegree trying to fit in as if I knew something.",
                        "id": 76
                    },
                    {
                        "name": "Master degree notes",
                        "text": "Within a few days of work, the truth started to\nsink in. <i>These people don\u2019t know what the hell they\u2019ve\ndoing! In fact, some people were watching me work\nand taking notes!</i> People with master\u2019s degrees in\ncomputer science!",
                        "id": 77
                    },
                    {
                        "name": "Try to teach",
                        "text": "If you want to really learn something, try teaching\nit to someone else. <i>There\u2019s no better way to\ncrystallize your understanding of something than\nto force yourself to express it to someone else</i>\nso that they can understand it.",
                        "id": 78
                    },
                    {
                        "name": "Not practice",
                        "text": "saxophone, if I sat down to practice and nothing\nbut pretty sounds came out. I\u2019d know I wasn\u2019t\npracticing. <i>Likewise, if I sit down to practice\ncoding and nothing but elegant code comes out,\nI\u2019m probably sitting somewhere near the center of\nmy current capabilities instead of the edges</i>, where\na good practice session should place me.",
                        "id": 79
                    },
                    {
                        "name": "Agile career",
                        "text": "<i>software developer, you would never want to pour\nyourself into developing something your client\ndoesn\u2019t want</i>. Agile methodologies help prevent\nyou from doing so. The same is true of your career.\nSet big goals, but make constant corrections along\nthe way.",
                        "id": 80
                    },
                    {
                        "name": "Code kata",
                        "text": "and made something...well, pragmatic out\nof it. <i>He created a series of what he\ncalls Code Kata, which are small, thought-\nprovoking exercises that programmers can do\nin the language of their choice.</i> Each kata\nemphasizes a specific technique.",
                        "id": 81
                    },
                    {
                        "name": "Do it faster",
                        "text": "Parkinson\u2019s law is an empirical observation - \nnot an unescapable human mandate. <i>A sense of\nurgency, even if manufactured, is enough to easily\ndouble or triple your productivity. Try it, and you'll\nsee. You can do it faster. You can do it now.</i> You can\nget it done instead of talking about getting it done.",
                        "id": 82
                    },
                    {
                        "name": "Dont guess",
                        "text": "You might take it upon yourself to change\na feature your customers did ask for in\na way that, unexpectedly to you, makes it\nless functional or desirable to the customer.\n<i>Beware of guessing when it comes to user\ninterfaces especially.</i>",
                        "id": 83
                    },
                    {
                        "name": "Manager role",
                        "text": "things get difficult. <i>The role of a good manager is\nto set priorities for the team, make sure the team\nhas what it needs to get the job done, and do what\nit takes to keep the team motivated and productive</i>,\nultimately getting done what needs to get done. A\njob well done by the team is a job well done by the\nmanager.",
                        "id": 84
                    },
                    {
                        "name": "Frustrating employee",
                        "text": "As a manager. <i>I can tell you that the most\nfrustrating thing to deal with is an employee\nwho's always aiming for the next rung on the\nladder</i>. You know the guy: you can\u2019t sit with\nhim for lunch without him bringing up who got\nwhat promotion. He always has some kind of\noffice gossip to spread.",
                        "id": 85
                    },
                    {
                        "name": "Leave the company",
                        "text": "to leave. Some even live out your daydream and\nwalk out with no notice. But in few cases do the\ncompanies they leave actually feel a significant\nimpact as a result of their departure. <i>In most cases,\neven in critical positions, the effect is surprisingly\nlow. Your presence on the job is, to the company,\nlike a pebble in a bucket of water.</i> Sure, the water\nlevel is higher as a result. You get things done.",
                        "id": 86
                    },
                    {
                        "name": "Bad sign",
                        "text": "Feeling irreplaceable is a bad sign, especially as\na software developer. <i>If you can\u2019t be replaced, it\nprobably means you perform tasks in such a way\nthat others can\u2019t also do them.</i> Although we'd all\nlike to claim some kind of special genius.",
                        "id": 87
                    },
                    {
                        "name": "Unmaintainable code",
                        "text": "I\u2019ve heard lots of <i>programmers half-joking about\ncreating \u201cjob security\u201d with unmaintainable code.\nAnd I\u2019ve seen actual programmers attempt to do\nit. In every case, these people have become targets.</i>\nSure, it was scary for the company to finally let\ngo of them.",
                        "id": 88
                    },
                    {
                        "name": "Attempt irreplaceable",
                        "text": "go of them. Ultimately, though, fear is the worst\nthat ever came of it. <i>Attempting to be irreplaceable\nis a defensive maneuver that creates a hostile\nrelationship with your employer</i> (and your co-\nworkers) where one may not have already existed.",
                        "id": 89
                    },
                    {
                        "name": "Refactoring code",
                        "text": "Each of these items goes on your to-do\nlist. <i>Document, automate, or refactor each\npiece of code or task so that it could be\neasily understood by anyone on your team.</i>\nDo this until you\u2019ve depleted your original\nlist. Proactively share these documents with\nyour team and your leader.",
                        "id": 90
                    },
                    {
                        "name": "Old systems",
                        "text": "scratch. We started with an empty building\nand were tasked with hiring and filling out an\nentire development organization. <i>In setting up\nthis development center, we faced a challenge we\nnever expected. Everyone wanted to make new\nsystems. Nobody wanted to maintain old systems.</i>\nWe wanted to create a new environment ...",
                        "id": 91
                    },
                    {
                        "name": "Refactoring old",
                        "text": "bug fixing, right? The designs may be old and\nmoldy, and broken windows may be scattered\nthroughout the system. <i>That\u2019s an opportunity to\nput your refactoring chops to the test. How elegant\ncan this system be? How much faster can you fix\nor enhance this section next time</i> because of the\nrefactoring you're doing this time?",
                        "id": 92
                    },
                    {
                        "name": "Indian yes",
                        "text": "<i>The inability to say \u201cno\u201d happens to be a common\npart of the Indian culture. Companies that are\ninexperienced with offshore outsourcing almost\nalways run into it.</i> You learn with time to sniff out\nuncertainty and ask the right questions. Enough\n\u201cone more day until it\u2019s done\u201d conversations\nnaturally train you to probe deeper.",
                        "id": 93
                    },
                    {
                        "name": "Say no",
                        "text": "On the other hand, what happens when you're\nasked to do a critical task and you say that you\ncan\u2019t? <i>As a manager of both onshore and offshore\nteams. I can tell you that \u201cno\u201d has become a source\nof relief to me</i>. If I have a team member who has\nthe strength to say \u201cno\u201d when that\u2019s the truth, then\nI know that when they say \u201cyes,\u201d they really mean.",
                        "id": 94
                    },
                    {
                        "name": "Give a try",
                        "text": "Don\u2019t go overboard with the \u201cno\u201d game. Can-do\nattitudes are still appreciated, and it\u2019s good to\nhave stretch goals. If you\u2019re not sure you can do\nsomething, but you want to give it a try, say that.\n<i>\u201cThis is going to be a challenge, but I\u2019d like to give it\natry\u201d is a wonderful answer.</i> Sometimes, of course,\nthe answer is simply \u201cyes.\u201d",
                        "id": 95
                    },
                    {
                        "name": "User panic",
                        "text": "out. <i>They start hectically clicking and dragging\nthings around on the screen, ignoring the\npotentially helpful error message text as it pops\nup over and over again.</i> They eventually get so\nflustered that they have to call for help, but usually\nnot before messing up one or two additional things\non the computer before doing so.",
                        "id": 96
                    },
                    {
                        "name": "Nobody knows",
                        "text": "As one manager told me recently, <i>if someone\ndoes something truly fantastic and nobody\nknows about it, in his eyes it didn\u2019t happen.\nIt may sound ruthless, but from a company\u2019s\nperspective it makes sense.</i> Pragmatically\nspeaking, managers don\u2019t have time to keep\nclose tabs on what each employee is doing.",
                        "id": 97
                    },
                    {
                        "name": "Nontechnical",
                        "text": "perceptions of you, you more firmly discover how\nto make them happy customers. <i>You're not going\nto impress your nontechnical business client with\nyour object-oriented design skills.</i> You might be\na design genius, but if you can\u2019t communicate\neffectively and you don\u2019t manage to complete your\nwork on time, your customers will think you stink.",
                        "id": 98
                    },
                    {
                        "name": "Perceptions matter",
                        "text": "<i>Perceptions really do matter. They keep you\nemployed (or unemployed). They get you\npromoted or get you stuck in the same job for\nyears.</i> They give you raises or lowball you on\nsalary. The sooner you get over yourself and learn\nto manage perceptions, the sooner you'll be on the\nright track.",
                        "id": 99
                    },
                    {
                        "name": "Turn the table",
                        "text": "My advice is to reverse the relationship. <i>Instead\nof feeling like you are the computer genius,\ndescending from computer heaven to save your\npoor customer from purgatory, turn the tables\naround.</i> If you're, for example, working in the\ninsurance industry, think of your customer as a\nsubject matter expert in insurance from which you\nhave to learn in order to get your job done.",
                        "id": 100
                    },
                    {
                        "name": "What benefit",
                        "text": "What would you say if your CEO asked you the\nsame question out of the blue? <i>Even given a few\nminutes to prepare, would you be able to explain\nthe business benefit of the tasks you are doing or\nthe tasks you had recently done?</i> Could you do it in\nwords that a totally nontechnical senior executive\ncould not only understand but also appreciate?",
                        "id": 101
                    },
                    {
                        "name": "No impact",
                        "text": "It\u2019s sad, but I don\u2019t know what most of the people\nI\u2019ve worked with in big-company IT have done.\n<i>People just don\u2019t think that way. They go to work,\ndo their assigned thing, and go home. There's\nno lasting impact</i>, other than the trail of code,\ndocuments, and e-mail they leave behind them.",
                        "id": 102
                    },
                    {
                        "name": "Higher sights",
                        "text": "Set your sights higher. <i>Don\u2019t think of yourself as\na programmer at a specific company\u2014after all, it\u2019s\nnot likely that you'll be at the same place forever\u2014\nbut as a participating member of an industry.</i> You\nare a craftsperson or an artist. You have something\nto share beyond the expense-reporting application.",
                        "id": 103
                    },
                    {
                        "name": "Best resume",
                        "text": "Companies want to hire experts. While a r\u00e9sum\u00e9\nwith a solid list of projects is a good way to\ndemonstrate experience, <i>nothing is better at a job\ninterview than for the interviewer to have already\nheard of you.</i> It\u2019s especially great if they\u2019ve heard of\nyou because they've read your articles or books or\nthey\u2019ve seen you speak at a conference.",
                        "id": 104
                    },
                    {
                        "name": "Appreciated",
                        "text": "People like to be appreciated, and they like\nto talk about the topics they are passionate about.\n<i>The fact that they are the professional or the\nguru or the leader or the renowned author doesn\u2019t\nchange that they\u2019re human and like to interact\nwith other humans.</i>",
                        "id": 105
                    },
                    {
                        "name": "Less humility",
                        "text": "artists, and other craftspeople have stayed strong\nand evolved their respective artforms for years.\n<i>The gurus are the supernodes in the social and\nprofessional network. All it takes to make the\nconnection is a little less humility.</i>",
                        "id": 106
                    },
                    {
                        "name": "New technologies",
                        "text": "Carve out weekly time to investigate the\nbleeding edge. <i>Make room for at least two\nhours each week in order to research new\ntechnologies</i> and to start to develop skills\nin them.",
                        "id": 107
                    }
                ]
            }
        ]
    },
    {
        "name": "Show your work",
        "children": [
            {
                "name": "Austin Kleon",
                "children": [
                    {
                        "name": "Self promotion",
                        "text": "I hate talking about self-promotion. Comedian\nSteve Martin famously dodges these questions\nwith the advice, <i>\u201cBe so good they can\u2019t ignore you.\u201d\nIf you just focus on getting really good. Martin\nsays, people will come to you.</i> I happen to agree.",
                        "id": 108
                    },
                    {
                        "name": "Findable",
                        "text": "You don\u2019t really find an audience for your work;\nthey find you. <i>But it\u2019s not enough to be good. In\norder to be found, you have to be findable.</i> I think\nthere\u2019s an easy way of putting your work out there\nand making it discoverable while you're focused on\ngetting really good.",
                        "id": 109
                    },
                    {
                        "name": "Sharing routine",
                        "text": "<i>Almost all of the people I look up to and try to steal\nfrom today, regardless of their profession, have\nbuilt sharing into their routine.</i> These people aren\u2019t\nschmoozing at cocktail parties; they\u2019re too busy\nfor that. They\u2019re cranking away in their studios,",
                        "id": 110
                    },
                    {
                        "name": "No resume",
                        "text": "<i>Imagine if your next boss didn\u2019t have to read\nyour r\u00e9sum\u00e9 because he already reads your blog.</i>\nImagine being a student and getting your first\ngig based on a school project you posted online.",
                        "id": 111
                    },
                    {
                        "name": "Support",
                        "text": "Imagine losing your job but having a social\nnetwork of people familiar with your work and\nready to help you find a new one. <i>Imagine turning\na side project or a hobby into your profession\nbecause you had a following that could support</i>",
                        "id": 112
                    },
                    {
                        "name": "Geniuses support",
                        "text": "<i>If you look back closely at history, many of the\npeople who we think of as lone geniuses were\nactually part of \u201ca whole scene of people who\n\u2018were supporting each other</i>, looking at each other</i>'s\nwork, copying from each other</i>, stealing ideas,\nand contributing ideas.\u201d Scenius doesn\u2019t take away",
                        "id": 113
                    },
                    {
                        "name": "Amateurs",
                        "text": "We're all terrified of being revealed as amateurs,\n<i>but in fact, today it is the amateur\u2014the enthusiast\nwho pursues her work in the spirit of love</i> (in\nFrench, the word means \u201clover\u201d), regardless of the\npotential for fame, money, or career\u2014who often\nhas the advantage over the professional. Because",
                        "id": 114
                    },
                    {
                        "name": "Not afraid",
                        "text": "<i>Amateurs are not afraid to make mistakes or look\nridiculous in public.</i> They\u2019re in love, so they don\u2019t\nhesitate to do work that others think of as silly or\njust plain stupid. \u201cThe stupidest possible creative\nact is still a creative act,\u201d writes Clay Shirky in\nhis book Cognitive Surplus. \u201cOn the spectrum of",
                        "id": 115
                    },
                    {
                        "name": "Doing nothing",
                        "text": "creative work, the difference between the mediocre\nand the good is vast. <i>Mediocrity is, however, still\non the spectrum; you can move from mediocre\nto good in increments. The real gap is between\ndoing nothing and doing something</i>.\u201d Amateurs\nknow that contributing something</i> is better than\ncontributing nothing.",
                        "id": 116
                    },
                    {
                        "name": "Lifelong learners",
                        "text": "<i>Amateurs might lack formal training, but\nthey\u2019re all lifelong learners, and they make a\npoint of learning in the open</i>, so that others\ncan learn from their failures and successes.",
                        "id": 117
                    },
                    {
                        "name": "Amateur help",
                        "text": "Sometimes, amateurs have more to teach\nus than experts. <i>\u201cIt often happens that two\nschoolboys can solve difficulties in their\nwork for one another better than the master\ncan,\u201d</i> wrote author C. S. Lewis.",
                        "id": 118
                    },
                    {
                        "name": "Fellow pupil",
                        "text": "<i>The fellow-pupil can help more than the master because\nhe knows less. The difficulty we want him\nto explain is one he has recently met.</i> The\nexpert met it so long ago he has forgotten.\u201d\nWatching amateurs at work can also inspire\nus to attempt the work ourselves.",
                        "id": 119
                    },
                    {
                        "name": "Changing rate",
                        "text": "<i>The world is changing at such a rapid\nrate that it\u2019s turning us all into amateurs.</i>\nEven for professionals, the best way to\nflourish is to retain an amateur\u2019s spirit\nand embrace uncertainty and the unknown.",
                        "id": 120
                    },
                    {
                        "name": "Use your voice",
                        "text": "We're always being told find your voice. <i>When\nI was younger. I never really knew what this\nmeant. I used to worry a lot about voice,\nwondering if I had my own. But now I realize\nthat the only way to find your voice is to use\nit.</i> It\u2019s hardwired, built into you. Talk about\nthe things you love. Your voice will follow.",
                        "id": 121
                    },
                    {
                        "name": "Not all artists",
                        "text": "Now, let\u2019s face it: We\u2019re not all artists or\nastronauts. <i>A lot of us go about our work\nand feel like we have nothing to show for\nit at the end of the day.</i> But whatever the\nnature of your work, there is an art to what\nyou do, and there are people who would be\ninterested in that art.",
                        "id": 122
                    },
                    {
                        "name": "Make stuff",
                        "text": "other people can see. <i>\u201cYou have to make\nstuff,\u201d said journalist David Carr when he\nwas asked if he had any advice for students.\n\u201cNo one is going to give a damn about your\nr\u00e9sum\u00e9;</i> they want to see what you have\nmade with your own little fingers.\u201d",
                        "id": 123
                    },
                    {
                        "name": "Documenting",
                        "text": "<i>Whether you share it or not, documenting and\nrecording your process as you go along has its own\nrewards:</i> You'll start to see the work you're doing\nmore clearly and feel like you\u2019re making progress.\nAnd when you're ready to share, you'll have a\nsurplus of material to choose from.",
                        "id": 124
                    },
                    {
                        "name": "Last weekend",
                        "text": "working on right now. When the artist Ze\nFrank was interviewing job candidates, he\ncomplained, <i>\u201cWhen I ask them to show me\nwork, they show me things from school, or\nfrom another job, but I\u2019m more interested\nin what they did last weekend.\u201d</i>",
                        "id": 125
                    },
                    {
                        "name": "90 crap",
                        "text": "Don\u2019t worry about everything you post being perfect. \n<i>Science fiction writer Theodore Sturgeon once said \nthat 90 percent of everything is crap. The same is true \nof our own work.</i> The trouble is, we don\u2019t always know \nwhat\u2019s good and what sucks. That\u2019s why it\u2019s important \nto get things in front of others and see how they react.",
                        "id": 126
                    },
                    {
                        "name": "Next day",
                        "text": "Don\u2019t overthink it; just go with your gut.\nIf you\u2019re unsure about whether to share\nsomething, let it sit for 24 hours. Put it in a\ndrawer and walk out the door. <i>The next day,\ntake it out and look at it with fresh eyes. Ask\nyourself, \u201cIs this helpful? Is it entertaining?\nIs it something I'd be comfortable with my\nboss or my mother seeing?\u201d</i>",
                        "id": 127
                    },
                    {
                        "name": "Stock and flow",
                        "text": "\u201cStock and flow\u201d is an economic concept\nthat writer Robin Sloan has adapted into a\nmetaphor for media: \u201c<i>Flow is the feed. It\u2019s the\nposts and the tweets. It\u2019s the stream of daily\nand sub-daily updates that remind people\nyou exist. Stock is the durable stuff.</i> It\u2019s the\ncontent you produce that\u2019s as interesting in\ntwo months (or two years) as it is today. It\u2019s\nwhat people discover via search.",
                        "id": 128
                    },
                    {
                        "name": "Invention machine",
                        "text": "<i>Don\u2019t think of your website as a self-promotion machine,\nthink of it as a self-invention machine.</i> Online, \nyou can become the person you really want to be. Fill your website \nwith your work and your ideas and the stuff you care about.",
                        "id": 129
                    },
                    {
                        "name": "Loving your garbage",
                        "text": "<i>We all love things that other people think are\ngarbage. You have to have the courage to keep\nloving your garbage</i>, because what makes us\nunique is the diversity and breadth of our\ninfluences, the unique ways in which we mix\nup the parts of culture others have deemed\n\u201chigh\u201d and the \u201clow.\u201d",
                        "id": 130
                    },
                    {
                        "name": "No quilt",
                        "text": "<i>When you find things you genuinely enjoy, don\u2019t let anyone \nelse make you feel bad about it. Don\u2019t feel guilty about \nthe pleasure you take in the things you enjoy. Celebrate\nthem.</i> When you share your taste and your influences, \nhave the guts to own all of it.",
                        "id": 131
                    },
                    {
                        "name": "Proper credit",
                        "text": "Crediting work in our copy-and-paste age of reblogs and retweets can\nseem like a futile effort, but it\u2019s worth it, and\nit\u2019s the right thing to do. <i>You should always\nshare the work of others as if it were your\nown, treating it with respect and care.</i>",
                        "id": 132
                    },
                    {
                        "name": "About stories",
                        "text": "John Gardner said the basic plot of nearly all\nstories is this: <i>\u201cA character wants something,\ngoes after it despite opposition (perhaps\nincluding his own doubts), and so arrives at\na win, lose, or draw.\u201d</i> I like Gardner's plot\nformula because it\u2019s also the shape of most\ncreative work.",
                        "id": 133
                    },
                    {
                        "name": "Nonfiction",
                        "text": "<i>Just because you're trying to tell a good\nstory about yourself doesn\u2019t mean you're\ninventing fiction. Stick to nonfiction.</i> Tell the\ntruth and tell it with dignity and self-respect.\nIf you're a student, say you're a student. If\nyou work a day job, say you work a day.",
                        "id": 134
                    },
                    {
                        "name": "Something disgraceful",
                        "text": "Maybe you're in the wrong line of work,\nor maybe you're not doing the work you're\nsupposed to be doing. \n<i>Remember what the author George Orwell\nwrote: \u201cAutobiography is only to be trusted\nwhen it reveals something disgraceful.\u201d</i>",
                        "id": 135
                    },
                    {
                        "name": "Teach to others",
                        "text": "<i>The minute you learn something, turn\naround and teach it to others. Share your\nreading list. Point to helpful reference\nmaterials.</i> Create some tutorials and post\nthem online. Use pictures, words, and video.",
                        "id": 136
                    },
                    {
                        "name": "Value to your work",
                        "text": "Teaching people doesn\u2019t subtract value from\nwhat you do, it actually adds to it. <i>When you\nteach someone how to do your work, you are,\nin effect, generating more interest in your\nwork.</i> People feel closer to your work because\nyou're letting them in on what you know.",
                        "id": 137
                    },
                    {
                        "name": "Human spam",
                        "text": "<i>I call these people human spam. They\u2019re\neverywhere, and they exist in every\nprofession.</i> They don\u2019t want to pay their\ndues, they want their piece right here, right\nnow. They don\u2019t want to listen to your ideas.",
                        "id": 138
                    },
                    {
                        "name": "Good citizen",
                        "text": "If you want fans, you have to be a fan first.\n<i>If you want to be accepted by a community,\nyou have to first be a good citizen of that\ncommunity.</i> If you\u2019re only pointing to your\nown stuff online, you're doing it wrong.",
                        "id": 139
                    },
                    {
                        "name": "Picasso brancusi",
                        "text": "Brancusi hailed from the Carpathian Mountains, and he\nknew a vampire when he saw one.<i> He was not\ngoing to have his energy or the fruits of his energy\njuiced by Picasso</i>, so he refused to have anything to\ndo with him.",
                        "id": 140
                    },
                    {
                        "name": "Vampire test",
                        "text": "Brancusi practiced what I call The Vampire\nTest. <i>It\u2019s a simple way to know who you\nshould let in and out of your life. If, after\nhanging out with someone you feel worn out\nand depleted, that person is a vampire.</i> If,\nafter hanging out with someone you still feel\nfull of energy, that person is not a vampire.</i>",
                        "id": 141
                    },
                    {
                        "name": "Real peers",
                        "text": "These are your real peers - <i>the people who\nshare your obsessions, the people who share\na similar mission to your own, the people\nwith whom you share a mutual respect.</i>\nThere will only be a handful or so of them,\nbut they\u2019re so, so important.",
                        "id": 142
                    },
                    {
                        "name": "Criticism",
                        "text": "Designer Mike Monteiro says that the most\nvaluable skill he picked up in art school was\nlearning how to take a punch. <i>He and his\nfellow classmates were absolutely brutal during\ncritiques. \u201cWe were basically trying to see if we\ncould get each other to drop out of school.\u201d</i> Those\nvicious critiques taught him not to take criticism\npersonally.",
                        "id": 143
                    },
                    {
                        "name": "Fear imagination",
                        "text": "The trouble with imaginative people is that we\u2019re good at picturing\nthe worst that could happen to us. Fear is often just the imagination taking a wrong\nturn. <i>Bad criticism is not the end of the world. As far as I know, no one has ever\ndied from a bad review.</i> Take a deep breath and accept whatever comes.",
                        "id": 144
                    },
                    {
                        "name": "Hated work",
                        "text": "You can\u2019t control what sort of criticism you receive, \nbut you can control how you react to it. \n<i>Sometimes when people hate something about your work, it\u2019s fun\nto push that element even further. To make something they\u2019d hate even more.</i>\nHaving your work hated by certain people is a badge of honor.",
                        "id": 145
                    },
                    {
                        "name": "Keep your balance",
                        "text": "You have to remember\nthat your work is something you do, not who\nyou are. This is especially hard for artists\nto accept, as so much of what they do is\npersonal. <i>Keep close to your family, friends,\nand the people who love you for you, not just\nthe work.</i>",
                        "id": 146
                    },
                    {
                        "name": "Troll",
                        "text": "<i>A troll is a person who isn\u2019t interested in\nimproving your work, only provoking you\nwith hateful, aggressive, or upsetting talk.</i>\nYou will gain nothing by engaging with these\npeople. Don\u2019t feed them, and they'll usually\ngo away.",
                        "id": 147
                    },
                    {
                        "name": "Nasty comments",
                        "text": "Do you have a troll problem? Use the block\nbutton on social media sites. <i>Delete nasty\ncomments. My wife is fond of saying, \u201cIf\nsomeone took a dump in your living room,\nyou wouldn't let it sit there, would you?\u201d</i>\nNasty comments are the same-they should\nbe scooped up and thrown in the trash.",
                        "id": 148
                    }
                ]
            }
        ]
    },
    {
        "name": "Steal Like an Artist",
        "children": [
            {
                "name": "Austin Kleon",
                "children": [
                    {
                        "name": "People advice",
                        "text": "It\u2019s one of my theories that <i>when people\ngive you advice, they\u2019re really just\ntalking to themselves in the past. \nThis book is me talking to a previous\nversion of myself.</i>",
                        "id": 149
                    },
                    {
                        "name": "Unknown reference",
                        "text": "The writer Jonathan Lethem has said that when\n<i>people call something \u201coriginal,\u201d nine out of ten\ntimes they just don\u2019t know the references</i> or the\noriginal sources involved.",
                        "id": 150
                    },
                    {
                        "name": "No one listening",
                        "text": "Some people find this idea depressing, but it\nfills me with hope. As the French writer Andr\u00e9\nGide put it, <i>\u201cEverything that needs to be said has\nalready been said. But, since no one was listening,\neverything must be said again.\u201d</i>",
                        "id": 151
                    },
                    {
                        "name": "Friendly ghosts",
                        "text": "<i>Seeing yourself as part of a creative lineage will\nhelp you feel less alone as you start making your\nown stuff</i>. I hang pictures of my favorite artists\nin my studio. They\u2019re like friendly ghosts. I can\nalmost feel them pushing me forward as I\u2019m\nhunched over my desk.",
                        "id": 152
                    },
                    {
                        "name": "Remote masters",
                        "text": "<i>The great thing about dead or remote masters is\nthat they can\u2019t refuse you as an apprentice.</i> You\ncan learn whatever you want from them. They left\ntheir lesson plans in their work.",
                        "id": 153
                    },
                    {
                        "name": "Get your education",
                        "text": "School is one thing. Education is another. The two\ndon\u2019t always overlap. <i>Whether you're in school\nor not, it\u2019s always your job to get yourself an\neducation.</i>",
                        "id": 154
                    },
                    {
                        "name": "Go deeper",
                        "text": "You have to be curious about the world in which\nyou live. Look things up. <i>Chase down every\nreference. Go deeper than anybody else\u2014that\u2019s\nhow you'll get ahead.</i>",
                        "id": 155
                    },
                    {
                        "name": "Google everything",
                        "text": "Google everything. I mean everything.\nGoogle your dreams. Google your problems.\n<i>Don\u2019t ask a question before you Google it.\nYou'll either find the answer or you'll come\nup with a better question.</i>",
                        "id": 156
                    },
                    {
                        "name": "Start book",
                        "text": "Always be reading. Go to the library. <i>There\u2019s\nmagic in being surrounded by books. Get lost\nin the stacks. Read bibliographies. It\u2019s not the\nbook you start with, it\u2019s the book that book\nleads you to.</i>",
                        "id": 157
                    },
                    {
                        "name": "Unread books",
                        "text": "Collect books, even if you don\u2019t plan on reading\nthem right away. <i>Filmmaker John Waters has said,\n\u201cNothing is more important than an unread library.\u201d</i>",
                        "id": 158
                    },
                    {
                        "name": "Impostor syndrome",
                        "text": "About impostore syndrome. <i>The clinical definition is a \u201cpsychological\nphenomenon in which people are unable to\ninternalize their accomplishments</i>.\u201d It means that\nyou feel like a phony, like you're just winging it,\nthat you really don\u2019t have any idea what you're\ndoing.",
                        "id": 159
                    },
                    {
                        "name": "Not plagiarism",
                        "text": "We're talking about practice here, not plagiarism.\n<i>Plagiarism is trying to pass someone else\u2019s\nwork off as your own. Copying is about reverse-\nengineering.</i>  It\u2019s like a mechanic taking apart a car\n\u2018to see how it works.",
                        "id": 160
                    },
                    {
                        "name": "Research",
                        "text": "the people you want to be. The songwriter Nick\nLowe says, \u201cYou start out by rewriting your hero\u2019s\ncatalog.\u201d And you don\u2019t just steal from one of your\nheroes, you steal from all of them. <i>The writer\nWilson Mizner said if you copy from one author,\nit\u2019s plagiarism, but if you copy from many, it\u2019s\nresearch</i>.",
                        "id": 161
                    },
                    {
                        "name": "Emulation",
                        "text": "At some point, you'll have to move from\nimitating your heroes to emulating them.\n<i>Imitation is about copying. Emulation\nis when imitation goes one step further,\nbreaking through into your own thing.</i>",
                        "id": 162
                    },
                    {
                        "name": "Adapt the moves",
                        "text": "\u201cThere isn\u2019t a move that\u2019s a new move.\u201d <i>The\nbasketball star Kobe Bryant has admitted that\nall of his moves on the court were stolen from\nwatching tapes of his heroes.</i> He realized he\ncouldn\u2019t completely pull them off because he\ndidn\u2019t have the same body type as the guys he was\nthieving from. He had to adapt to make them his own.",
                        "id": 163
                    },
                    {
                        "name": "Adding something",
                        "text": "In the end, <i>merely imitating your heroes is not\nflattering them. Transforming their work into\nsomething of your own is how you flatter them.</i>\nAdding something to the world that only you can\nadd.",
                        "id": 164
                    },
                    {
                        "name": "Make stuff",
                        "text": "The manifesto is this: <i>Draw the art you want to\nsee, start the business you want to run, play the\nmusic you want to hear, write the books you want\nto read, build the products you want to use</i>\u2014do\nthe work you want to see done.",
                        "id": 165
                    },
                    {
                        "name": "Body work",
                        "text": "Work that only comes from the head isn\u2019t any\ngood. Watch a great musician play a show. Watch\na great leader give a speech. You'll see what I mean.\n<i>You need to find a way to bring your body into\nyour work. Our nerves aren\u2019t a one-way street.\n\u2014our bodies</i> can tell our brains as much as our\nbrains tell our bodies</i>.",
                        "id": 166
                    },
                    {
                        "name": "Side projects",
                        "text": "One thing I\u2019ve learned in my brief career: <i>It\u2019s the\nside projects that really take off. By side projects I\nmean the stuff that you thought was just messing\naround.</i> Stuff that\u2019s just play. That\u2019s actually the\ngood stuff. That\u2019s when the magic happens.",
                        "id": 167
                    },
                    {
                        "name": "Lot of projects",
                        "text": "<i>I think it\u2019s good to have a lot of projects going\nat once so you can bounce between them.</i>\nWhen you get sick of one project, move over to\nanother, and when you're sick of that one, move\nback to the project you left. ",
                        "id": 168
                    },
                    {
                        "name": "Get bored",
                        "text": "<i>Creative people need time to just sit around\nand do nothing. I get some of my best ideas when\nI\u2019m bored</i>, which is why I never take my shirts\nto the cleaners. I love ironing my shirts\u2014it\u2019s so\nboring. I almost always get good ideas.",
                        "id": 169
                    },
                    {
                        "name": "Avoiding work",
                        "text": "I almost always get good ideas. <i>If you\u2019re out\nof ideas, wash the dishes. Take a really long walk.\nStare at a spot on the wall for as long as you can.</i> As\nthe artist Maira Kalman says, \u201cAvoiding work is the\nway to focus my mind.\u201d",
                        "id": 170
                    },
                    {
                        "name": "Hobby",
                        "text": "<i>It\u2019s so important to have a hobby. A hobby is\nsomething creative that\u2019s just for you.</i> You\ndon\u2019t try to make money or get famous off\nit, you just do it because it makes you happy.\nAhobby is something that gives but doesn\u2019t\ntake.",
                        "id": 171
                    },
                    {
                        "name": "Public image",
                        "text": "This is actually a good thing, because you want\nattention only after you're doing really good work.\n<i>There\u2019s no pressure when you're unknown. You\ncan do what you want. Experiment. Do things just\nfor the fun of it.</i> When you\u2019re unknown, there\u2019s\nnothing to distract you from getting better. No\npublic image to manage.",
                        "id": 172
                    },
                    {
                        "name": "Stuff on internet",
                        "text": "It\u2019s a two-step process. <i>Step one, \u201cdo good work,\u201d is\nincredibly hard. There are no shortcuts. Make stuff every\nday. Know you're going to suck for a while. Fail. Get better.</i>\nStep two, \u201cshare it with people,\u201d was really hard up until\nabout ten years ago or so. Now, it's very simple: \u201cPut your\nstuff on the Internet.\u201d",
                        "id": 173
                    },
                    {
                        "name": "Ideas incubator",
                        "text": "<i>You don\u2019t put yourself online only because you\nhave something to say\u2014you can put yourself\nonline to find something to say.</i> The Internet can\nbe more than just a resting place to publish your\nfinished ideas\u2014it can also be an incubator for\nideas that aren't fully formed.",
                        "id": 174
                    },
                    {
                        "name": "Travel",
                        "text": "<i>Your brain gets too comfortable in your everyday\nsurroundings. You need to make it uncomfortable.\nYou need to spend some time in another land,</i>\namong people that do things differently than you.\nTravel makes the world look new, and when the\nworld looks new, our brains work harder.",
                        "id": 175
                    },
                    {
                        "name": "Another room",
                        "text": "Harold Ramis, once laid out his rule for\nsuccess: \u201cFind the most talented person in the\nroom, and if it\u2019s not you, go stand next to him.\"\n<i>If you ever find that you're the most talented\nperson in the room, you need to find another room.</i>",
                        "id": 176
                    },
                    {
                        "name": "Anger",
                        "text": "Anger is one of my favorite creative resources.\nSome mornings, when I can\u2019t wake up. I lie in bed\nand read e-mail and Twitter until my blood\nstarts boiling and I get fired up enough to spring\nout of bed. <i>But instead of wasting my anger on\ncomplaining or lashing out at people. I try to\nchannel it into my writing and my drawing.</i>",
                        "id": 177
                    },
                    {
                        "name": "To busy doing",
                        "text": "Not everybody will get it. People will misinterpret\nyou and what you do. They might even call\nyou names. <i>So get comfortable with being\nmisunderstood, disparaged, or ignored\u2014the trick\nis to be too busy doing your work to care.</i>",
                        "id": 178
                    },
                    {
                        "name": "Validation boost",
                        "text": "Life is a lonely business, often filled with\ndiscouragement and rejection. <i>Yes, validation is\nfor parking, but it\u2019s still a tremendous boost when\npeople say nice things about our work.</i>",
                        "id": 179
                    }
                ]
            }
        ]
    }
]